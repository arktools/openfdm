//    datcom.mos: check datcom model
//
//    Copyright (C) 2012  James Goppert <james.goppert@gmail.com>
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program.  If not, see <http://www.gnu.org/licenses/>.


// options
setCommandLineOptions({
//"+showErrorMessages",
"+preOptModules=inlineArrayEqn",
"+postOptModules=inlineArrayEqn,constantLinearSystem,removeSimpleEquations,generateSymbolicLinearization",
//"+a",
//"+noSimplify",
"+d=linearization,gendebugsymbols"
});

// this line required the project path to be appended to OPENMODELICALIBRARY
loadModel(Modelica);
loadModel(MultiBodyOmc);
loadModel(OpenFDM);
getErrorString();


// it is necessary to extract the model form all packages so the "." is not mis-read
system("rm *DatcomEx*");
loadString("
model DatcomEx
  extends OpenFDM.Aerodynamics.Examples.DatcomEx;
end DatcomEx;
");

// get linear model
simulate(DatcomEx,numberOfIntervals=1);
//getErrorString();
system("./DatcomEx -l 0 > log.out"); readFile("log.out");
loadFile("linear_DatcomEx.mo");
getErrorString();
list(linear_DatcomEx);
getErrorString();

// simulate non-linear model
simulate(DatcomEx,stopTime=100,measureTime=true);
plotParametric(body.airframe.r_0[1],body.airframe.r_0[3]);
//getErrorString();
