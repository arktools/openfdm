# Python stubs generated by omniidl from ..//Compiler/runtime/omc_communication.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "_OMCIDL"
#
__name__ = "OMPythonIDL._OMCIDL"
_0__OMCIDL = omniORB.openModule("OMPythonIDL._OMCIDL", r"..//Compiler/runtime/omc_communication.idl")
_0__OMCIDL__POA = omniORB.openModule("OMPythonIDL._OMCIDL__POA", r"..//Compiler/runtime/omc_communication.idl")


# interface OmcCommunication
_0__OMCIDL._d_OmcCommunication = (omniORB.tcInternal.tv_objref, "IDL:OmcCommunication:1.0", "OmcCommunication")
omniORB.typeMapping["IDL:OmcCommunication:1.0"] = _0__OMCIDL._d_OmcCommunication
_0__OMCIDL.OmcCommunication = omniORB.newEmptyClass()
class OmcCommunication :
    _NP_RepositoryId = _0__OMCIDL._d_OmcCommunication[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0__OMCIDL.OmcCommunication = OmcCommunication
_0__OMCIDL._tc_OmcCommunication = omniORB.tcInternal.createTypeCode(_0__OMCIDL._d_OmcCommunication)
omniORB.registerType(OmcCommunication._NP_RepositoryId, _0__OMCIDL._d_OmcCommunication, _0__OMCIDL._tc_OmcCommunication)

# OmcCommunication operations and attributes
OmcCommunication._d_sendExpression = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), None)
OmcCommunication._d_sendClass = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), None)

# OmcCommunication object reference
class _objref_OmcCommunication (CORBA.Object):
    _NP_RepositoryId = OmcCommunication._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def sendExpression(self, *args):
        return _omnipy.invoke(self, "sendExpression", _0__OMCIDL.OmcCommunication._d_sendExpression, args)

    def sendClass(self, *args):
        return _omnipy.invoke(self, "sendClass", _0__OMCIDL.OmcCommunication._d_sendClass, args)

    __methods__ = ["sendExpression", "sendClass"] + CORBA.Object.__methods__

omniORB.registerObjref(OmcCommunication._NP_RepositoryId, _objref_OmcCommunication)
_0__OMCIDL._objref_OmcCommunication = _objref_OmcCommunication
del OmcCommunication, _objref_OmcCommunication

# OmcCommunication skeleton
__name__ = "OMPythonIDL._OMCIDL__POA"
class OmcCommunication (PortableServer.Servant):
    _NP_RepositoryId = _0__OMCIDL.OmcCommunication._NP_RepositoryId


    _omni_op_d = {"sendExpression": _0__OMCIDL.OmcCommunication._d_sendExpression, "sendClass": _0__OMCIDL.OmcCommunication._d_sendClass}

OmcCommunication._omni_skeleton = OmcCommunication
_0__OMCIDL__POA.OmcCommunication = OmcCommunication
omniORB.registerSkeleton(OmcCommunication._NP_RepositoryId, OmcCommunication)
del OmcCommunication
__name__ = "OMPythonIDL._OMCIDL"

#
# End of module "_OMCIDL"
#
__name__ = "OMPythonIDL.omc_communication_idl"

_exported_modules = ( "OMPythonIDL._OMCIDL", )

# The end.
